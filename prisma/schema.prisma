generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid()) @db.Uuid
  name     String
  email    String @unique
  password String

  bankAccounts           BankAccount[]
  transaction_categories TransactionCategory[]
  transactions           Transaction[]

  @@map("users")
}

enum BankAccountType {
  CHECKING
  INVESTIMENT
  CASH

  @@map("bank_account_type")
}

model BankAccount {
  id             String          @id @default(uuid()) @db.Uuid
  userId         String          @map("user_id") @db.Uuid
  initialBalance Float           @map("initial_balance")
  type           BankAccountType
  color          String

  transactions Transaction[]

  user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("bank_accounts")
}

enum TransactionType {
  INCOME
  EXPENSE

  @@map("transaction_type")
}

model TransactionCategory {
  id     String          @id @default(uuid()) @db.Uuid
  userId String          @map("user_id") @db.Uuid
  name   String
  icon   String
  type   TransactionType

  transactions Transaction[]

  user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("transaction_categories")
}

model Transaction {
  id                    String          @id @default(uuid()) @db.Uuid
  userId                String          @map("user_id") @db.Uuid
  bankAccountId         String          @map("bank_account_id") @db.Uuid
  transactionCategoryId String?         @map("transaction_category_id") @db.Uuid
  name                  String
  value                 Float
  date                  DateTime
  type                  TransactionType

  user                User                 @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  bankAccount         BankAccount          @relation(fields: [bankAccountId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  transactionCategory TransactionCategory? @relation(fields: [transactionCategoryId], references: [id], onDelete: SetNull, onUpdate: Cascade)

  @@map("transactions")
}
